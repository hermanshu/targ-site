import React, { useState } from 'react';
import { 
  ArrowLeftIcon,
  QuestionMarkCircleIcon,
  EnvelopeIcon,
  DocumentTextIcon,
  ChevronDownIcon,
  ChevronUpIcon,
  InformationCircleIcon,
  GlobeAltIcon,
  UserGroupIcon,
  ShieldCheckIcon,
  HeartIcon
} from '@heroicons/react/24/outline';
import { useNavigate } from 'react-router-dom';
import { useTranslation } from '../hooks/useTranslation';
import { LegalDocumentModal } from './legal/LegalDocumentModal';

interface FAQItem {
  question: string;
  answer: string;
}

const HelpAndSupportView: React.FC = () => {
  const { t } = useTranslation();
  const navigate = useNavigate();
  const [expandedFAQ, setExpandedFAQ] = useState<number | null>(null);
  const [showTermsModal, setShowTermsModal] = useState(false);
  const [showPrivacyModal, setShowPrivacyModal] = useState(false);
  const [isAboutExpanded, setIsAboutExpanded] = useState(false);

  const faqItems: FAQItem[] = [
    {
      question: t('help.howToCreateListing'),
      answer: t('help.howToCreateListingAnswer')
    },
    {
      question: t('help.howToContactSeller'),
      answer: t('help.howToContactSellerAnswer')
    },
    {
      question: t('help.howToEditListing'),
      answer: t('help.howToEditListingAnswer')
    },
    {
      question: t('help.howToDeleteListing'),
      answer: t('help.howToDeleteListingAnswer')
    },
    {
      question: t('help.howToReport'),
      answer: t('help.howToReportAnswer')
    },
    {
      question: t('help.howToChangeLanguage'),
      answer: t('help.howToChangeLanguageAnswer')
    }
  ];

  const toggleFAQ = (index: number) => {
    setExpandedFAQ(expandedFAQ === index ? null : index);
  };

  const toggleAbout = () => {
    setIsAboutExpanded(!isAboutExpanded);
  };

  const contactMethods = [
    {
      icon: EnvelopeIcon,
      title: t('help.emailSupport'),
      subtitle: 'support@targ.store',
      action: () => window.open('mailto:support@targ.store')
    }
  ];

  const aboutFeatures = [
    {
      icon: GlobeAltIcon,
      title: '–õ–æ–∫–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞',
      description: 'Targ - —ç—Ç–æ –º–µ—Å—Ç–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –°–µ—Ä–±–∏–∏. –ú—ã —Å–æ–µ–¥–∏–Ω—è–µ–º –ª—é–¥–µ–π –≤ —Ç–≤–æ—ë–º –≥–æ—Ä–æ–¥–µ.'
    },
    {
      icon: UserGroupIcon,
      title: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ',
      description: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —Ä–∞—Å—Ç—É—â–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∏ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤. –î–µ–ª–∏—Å—å –æ–ø—ã—Ç–æ–º –∏ –Ω–∞—Ö–æ–¥–∏ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π.'
    },
    {
      icon: ShieldCheckIcon,
      title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
      description: '–ú—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é.'
    },
    {
      icon: HeartIcon,
      title: '–ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
      description: '–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω—É–∂–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã.'
    }
  ];

  const platformFeatures = [
    {
      icon: 'üí¨',
      title: '–£–º–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏',
      description: '–ü–æ–º–µ—á–∞–π –¥–∏–∞–ª–æ–≥–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏: "–î–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å –æ –≤—Å—Ç—Ä–µ—á–µ", "–ñ–¥—É –æ—Ç–≤–µ—Ç–∞", "–£—Å–ø–µ—à–Ω–∞—è —Å–¥–µ–ª–∫–∞", "–ê—Ä—Ö–∏–≤" –∏ –ª–µ–≥–∫–æ —Ñ–∏–ª—å—Ç—Ä—É–π –∏—Ö –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω—É–∂–Ω—ã–º –ø–µ—Ä–µ–ø–∏—Å–∫–∞–º.'
    },
    {
      icon: 'üìä',
      title: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π',
      description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–π –ø—Ä–æ—Å–º–æ—Ç—Ä—ã —Å–≤–æ–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂.'
    },
    {
      icon: 'üìÅ',
      title: '–ü–∞–ø–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ',
      description: '–°–æ–∑–¥–∞–≤–∞–π —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏ –¥–µ–ª–∏—Å—å —Å–ø–∏—Å–∫–∞–º–∏ —Å –¥—Ä—É–∑—å—è–º–∏ —á–µ—Ä–µ–∑ —É–¥–æ–±–Ω—ã–µ —Å—Å—ã–ª–∫–∏.'
    }
  ];

  return (
    <div className="help-support-container">
      <div className="help-header">
        <button 
          className="back-button"
          onClick={() => navigate('/profile')}
        >
          <ArrowLeftIcon className="back-icon" />
        </button>
        <h1 className="help-title">{t('help.title')}</h1>
      </div>

      <div className="help-content">
        {/* –û –Ω–∞—Å */}
        <section className="help-section about-section">
          <button 
            className="about-header-button"
            onClick={toggleAbout}
          >
                          <div className="about-header-content">
                <InformationCircleIcon className="section-icon" />
                <h2 className="section-title">–û –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</h2>
              </div>
            {isAboutExpanded ? (
              <ChevronUpIcon className="about-chevron" />
            ) : (
              <ChevronDownIcon className="about-chevron" />
            )}
          </button>
          
          {isAboutExpanded && (
            <div className="about-content">
              <div className="about-intro">
                <h3 className="about-subtitle">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Targ</h3>
                <p className="about-description">
                  Targ - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –°–µ—Ä–±–∏–∏. 
                  –ú—ã —Å–æ–∑–¥–∞–ª–∏ —É–¥–æ–±–Ω–æ–µ –º–µ—Å—Ç–æ, –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ, 
                  –∏–ª–∏ –ø—Ä–æ–¥–∞—Ç—å —Ç–æ, —á—Ç–æ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å.
                </p>
                <div className="about-note">
                  <p>
                    üí° –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∞ –Ω–∞ —á–∏—Å—Ç–æ–º —ç–Ω—Ç—É–∑–∏–∞–∑–º–µ! –ï—Å–ª–∏ —Ç—ã –∑–∞–º–µ—Ç–∏–ª –æ—à–∏–±–∫–∏, –±–∞–≥–∏ 
                    –∏–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É –∏ –¥–∏–∑–∞–π–Ω—É - –º—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã 
                    –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏. –ü–∏—à–∏ –Ω–∞–º –Ω–∞ –ø–æ—á—Ç—É, —É–∫–∞–∑–∞–Ω–Ω—É—é –Ω–∏–∂–µ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ö–æ–Ω—Ç–∞–∫—Ç—ã".
                  </p>
                </div>
              </div>

              <div className="about-features">
                {aboutFeatures.map((feature, index) => (
                  <div key={index} className="about-feature">
                    <div className="about-feature-icon">
                      <feature.icon />
                    </div>
                    <div className="about-feature-content">
                      <h4 className="about-feature-title">{feature.title}</h4>
                      <p className="about-feature-description">{feature.description}</p>
                    </div>
                  </div>
                ))}
              </div>

              <div className="platform-features">
                <h4 className="features-title">–ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</h4>
                <div className="features-grid">
                  {platformFeatures.map((feature, index) => (
                    <div key={index} className="platform-feature">
                      <div className="platform-feature-icon">{feature.icon}</div>
                      <div className="platform-feature-content">
                        <h5 className="platform-feature-title">{feature.title}</h5>
                        <p className="platform-feature-description">{feature.description}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>


            </div>
          )}
        </section>

        {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <section className="help-section">
          <h2 className="section-title">{t('help.contactUs')}</h2>
          <div className="contact-methods">
            {contactMethods.map((method, index) => (
              <div 
                key={index}
                className="contact-method"
                onClick={method.action}
              >
                <div className="contact-icon">
                  <method.icon />
                </div>
                <div className="contact-info">
                  <h3 className="contact-title">{method.title}</h3>
                  <p className="contact-subtitle">{method.subtitle}</p>
                </div>
                <ArrowLeftIcon className="contact-arrow" />
              </div>
            ))}
          </div>
        </section>

        {/* –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã */}
        <section className="help-section">
          <h2 className="section-title">{t('help.frequentlyAskedQuestions')}</h2>
          <div className="faq-list">
            {faqItems.map((item, index) => (
              <div key={index} className="faq-item">
                <button 
                  className="faq-question"
                  onClick={() => toggleFAQ(index)}
                >
                  <QuestionMarkCircleIcon className="faq-icon" />
                  <span className="faq-text">{item.question}</span>
                  {expandedFAQ === index ? (
                    <ChevronUpIcon className="faq-chevron" />
                  ) : (
                    <ChevronDownIcon className="faq-chevron" />
                  )}
                </button>
                {expandedFAQ === index && (
                  <div className="faq-answer">
                    <p>{item.answer}</p>
                  </div>
                )}
              </div>
            ))}
          </div>
        </section>

        {/* –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */}
        <section className="help-section">
          <h2 className="section-title">{t('help.usefulLinks')}</h2>
          <div className="useful-links">
            <div className="useful-link" onClick={() => setShowTermsModal(true)}>
              <DocumentTextIcon className="link-icon" />
              <div className="link-info">
                <h3 className="link-title">{t('help.termsOfService')}</h3>
                <p className="link-subtitle">{t('help.termsOfServiceSubtitle')}</p>
              </div>
              <ArrowLeftIcon className="link-arrow" />
            </div>
            <div className="useful-link" onClick={() => setShowPrivacyModal(true)}>
              <DocumentTextIcon className="link-icon" />
              <div className="link-info">
                <h3 className="link-title">{t('help.privacyPolicy')}</h3>
                <p className="link-subtitle">{t('help.privacyPolicySubtitle')}</p>
              </div>
              <ArrowLeftIcon className="link-arrow" />
            </div>
          </div>
        </section>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ */}
      <LegalDocumentModal
        isOpen={showTermsModal}
        onClose={() => setShowTermsModal(false)}
        documentType="terms"
      />
      <LegalDocumentModal
        isOpen={showPrivacyModal}
        onClose={() => setShowPrivacyModal(false)}
        documentType="privacy"
      />
    </div>
  );
};

export default HelpAndSupportView; 