import React, { useState, useEffect } from 'react';
import { useTranslation } from '../hooks/useTranslation';
import DesktopListingsGrid from './DesktopListingsGrid';
import { Listing } from '../types';

interface SharedFavoritesViewProps {
  userId: string;
  onCardClick: (listing: Listing) => void;
}

const SharedFavoritesView: React.FC<SharedFavoritesViewProps> = ({ 
  userId, 
  onCardClick 
}) => {
  const { t } = useTranslation();
  const [sharedFavorites, setSharedFavorites] = useState<Listing[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API –∑–∞–ø—Ä–æ—Å
    // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const loadSharedFavorites = async () => {
      try {
        setIsLoading(true);
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ - –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—ã–ª –±—ã API –∑–∞–ø—Ä–æ—Å
        const mockFavorites: Listing[] = [
          {
            id: 'shared-1',
            title: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ',
            price: '150000',
            currency: 'EUR',
            city: '–ë–µ–ª–≥—Ä–∞–¥',
            category: '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å',
            sellerName: '–ê–ª–µ–∫—Å–µ–π',
            isCompany: false,
            createdAt: '2024-01-15T10:00:00Z',
            userId: userId,
            images: [{ id: '1', src: '/images/apartment-2room.jpg' }]
          },
          {
            id: 'shared-2',
            title: 'BMW X5 2019',
            price: '45000',
            currency: 'EUR',
            city: '–ù–æ–≤–∏ –°–∞–¥',
            category: '–ê–≤—Ç–æ',
            sellerName: '–ú–∏—Ö–∞–∏–ª',
            isCompany: false,
            createdAt: '2024-01-14T15:30:00Z',
            userId: userId,
            images: [{ id: '2', src: '/images/bmw-1.jpg' }]
          }
        ];
        
        setSharedFavorites(mockFavorites);
      } catch (err) {
        setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
      } finally {
        setIsLoading(false);
      }
    };

    loadSharedFavorites();
  }, [userId]);

  if (isLoading) {
    return (
      <div className="shared-favorites-loading">
        <div className="loading-spinner"></div>
        <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className="shared-favorites-error">
        <div className="error-icon">‚ö†Ô∏è</div>
        <h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
        <p>{error}</p>
        <button 
          className="retry-button"
          onClick={() => window.location.reload()}
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    );
  }

  if (sharedFavorites.length === 0) {
    return (
      <div className="shared-favorites-empty">
        <div className="empty-icon">üîí</div>
        <h2>–ò–∑–±—Ä–∞–Ω–Ω–æ–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</h2>
        <p>–≠—Ç–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ª–∏–±–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.</p>
      </div>
    );
  }

  return (
    <div className="shared-favorites-container">
      <div className="shared-favorites-header">
        <div className="header-center">
          <h1 className="shared-favorites-title">–ò–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h1>
          <span className="shared-favorites-count">
            {sharedFavorites.length} {t('favorites.listingsCount')}
          </span>
          <div className="shared-favorites-note">
            –≠—Ç–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –±—ã–ª–æ –ø–æ–¥–µ–ª–∏–ª–æ—Å—å —Å —Ç–æ–±–æ–π. –¢—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –Ω–æ –Ω–µ –º–æ–∂–µ—à—å –∏—Ö –∏–∑–º–µ–Ω—è—Ç—å.
          </div>
        </div>
      </div>
      
      <DesktopListingsGrid
        listings={sharedFavorites}
        onFavoriteToggle={() => {}} // –û—Ç–∫–ª—é—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
        isFavorite={() => false} // –í—Å–µ–≥–¥–∞ false –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
        onCardClick={onCardClick}
        hasMore={false}
        onLoadMore={() => {}}
        isLoading={false}
        hasFilters={false}
      />
    </div>
  );
};

export default SharedFavoritesView; 